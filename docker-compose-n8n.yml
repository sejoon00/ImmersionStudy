version: "3.8"

services:
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: always
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.mytlsresolver.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlsresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.mytlsresolver.acme.tlschallenge=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - traefik_net

  crawl4ai:
    image: unclecode/crawl4ai:latest
    container_name: crawl4ai
    restart: always
    ports:
      - "9999:8000"
    networks:
      - n8n_net

  postgres:
    image: pgvector/pgvector:pg18
    container_name: n8n_postgres
    restart: always
    env_file:
      - .env-n8n
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - n8n_net

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n_app
    restart: always
    env_file:
      - .env-n8n
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:5678/healthz || exit 1" ]
      interval: 10s
      timeout: 3s
      retries: 20
    environment:
      DB_TYPE: ${DB_TYPE}
      DB_POSTGRESDB_HOST: ${DB_POSTGRESDB_HOST}
      DB_POSTGRESDB_PORT: ${DB_POSTGRESDB_PORT}
      DB_POSTGRESDB_DATABASE: ${DB_POSTGRESDB_DATABASE}
      DB_POSTGRESDB_USER: ${DB_POSTGRESDB_USER}
      DB_POSTGRESDB_PASSWORD: ${DB_POSTGRESDB_PASSWORD}

      N8N_ENCRYPTION_KEY: ${N8N_ENCRYPTION_KEY}
      GENERIC_TIMEZONE: ${GENERIC_TIMEZONE}
      N8N_HOST: ${N8N_HOST}
      N8N_PORT: ${N8N_PORT}
      N8N_PROTOCOL: ${N8N_PROTOCOL}
      N8N_WEBHOOK_URL: ${N8N_WEBHOOK_URL}

      EXECUTIONS_DATA_SAVE_ON_ERROR: ${EXECUTIONS_DATA_SAVE_ON_ERROR}
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: ${EXECUTIONS_DATA_SAVE_ON_SUCCESS}
      EXECUTIONS_DATA_PRUNE: ${EXECUTIONS_DATA_PRUNE}
      EXECUTIONS_DATA_MAX_AGE: ${EXECUTIONS_DATA_MAX_AGE}
      N8N_LOG_LEVEL: ${N8N_LOG_LEVEL}
      N8N_METRICS: ${N8N_METRICS}
      NODE_OPTIONS: --dns-result-order=ipv4first

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls.certresolver=mytlsresolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    networks:
      - n8n_net
      - traefik_net

networks:
  n8n_net:
    driver: bridge
  traefik_net:
    driver: bridge

volumes:
  traefik_data:
  pg_data:
  n8n_data: